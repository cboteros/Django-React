# Various variables you might want for your PS1 prompt instead
	#Time12h="\T"
	#Time12a="\@"
	PathShort="\w"
	#PathFull="\W"
	#NewLine="\n"
	Jobs="\j"

# Git
	source /etc/git-completion.bash

# MacPorts
	export PATH="/usr/local/bin:/opt/local/bin:/opt/local/sbin:$PATH"

# Node Completion - Auto-generated, do not touch.
	shopt -s progcomp
	for f in $(command ls ~/.node-completion); do
	  f="$HOME/.node-completion/$f"
	  test -f "$f" && . "$f"
	done

# PostgreSQL
	export PATH="/Applications/Postgres.app/Contents/MacOS/bin:$PATH"

# Java Home
	export JAVA_HOME=$(/usr/libexec/java_home)

# Ruby Version Manager
	export PATH=$PATH:$HOME/.rvm/bin

# Python path
	export PYTHONPATH=/usr/local/lib/python2.7/site-packages
	export PATH="$PATH:/usr/local/share/python"

# Alias
	alias ll='ls -la'
	alias jetty-kill="ps | grep jetty | sed  's/^ \([0-9]\{1,\}\).*/\1/' | xargs kill -9"
	alias jetty-run="mvn clean jetty:run"

	alias gg="git status"
	alias gitroot='cd $(git rev-parse --show-toplevel)'
 	alias git-branches='git branch -va'
 	alias gp="git pull"
 	#alias gitk='"$(brew --prefix tcl-tk)/bin/wish" "$(which gitk)"'
 	#alias gitk='gitk --all 2> /dev/null &'
	alias heroku-go='git add . ; git commit -m "up" ; git push heroku master'

	alias mysql=/usr/local/mysql/bin/mysql
 	alias mysqladmin=/usr/local/mysql/bin/mysqladmin
 	alias subl="open -a /Applications/Sublime\ Text.app"

 	alias entando-run="mvn -U clean jetty:run -Djava.awt.headless=true"
	alias mvn-cci="mvn -U clean compile install -DskipTests"
	alias mvn-cci-subproj='mvn -\-also-make clean install -DskipTests --projects $1'

# Ant
	complete -C /usr/local/bin/complete-ant-cmd.pl ant

# Colors
	export GREP_OPTIONS='--color=auto' GREP_COLOR='1;32'
	export CLICOLOR=1
	export LSCOLORS=exfxcxdxbxegedabagacad
	export TERM=xterm-color
	export LESS="--RAW-CONTROL-CHARS"
	[[ -f ~/.LESS_TERMCAP ]] && . ~/.LESS_TERMCAP
	if test $UID = 0
	    then PS1="\033[1m${PS1}\033[0m"
	fi

# Bash-Completion
	if [ -f $(brew --prefix)/etc/bash_completion ]; then
		. $(brew --prefix)/etc/bash_completion
	fi


# Cairo
	export PKG_CONFIG_PATH=/opt/X11/lib/pkgconfig

# Prompt
# Color Reset
	Color_Off="\[\033[0m\]"       # Text Reset

# Regular Colors
	Black="\[\033[0;30m\]"        # Black
	Red="\[\033[0;31m\]"          # Red
	Green="\[\033[0;32m\]"        # Green
	Yellow="\[\033[0;33m\]"       # Yellow
	Blue="\[\033[0;34m\]"         # Blue
	Purple="\[\033[0;35m\]"       # Purple
	Cyan="\[\033[0;36m\]"         # Cyan
	White="\[\033[0;37m\]"        # White

# Bold
	BBlack="\[\033[1;30m\]"       # Black
	BRed="\[\033[1;31m\]"         # Red
	BGreen="\[\033[1;32m\]"       # Green
	BYellow="\[\033[1;33m\]"      # Yellow
	BBlue="\[\033[1;34m\]"        # Blue
	BPurple="\[\033[1;35m\]"      # Purple
	BCyan="\[\033[1;36m\]"        # Cyan
	BWhite="\[\033[1;37m\]"       # White

# Underline
	UBlack="\[\033[4;30m\]"       # Black
	URed="\[\033[4;31m\]"         # Red
	UGreen="\[\033[4;32m\]"       # Green
	UYellow="\[\033[4;33m\]"      # Yellow
	UBlue="\[\033[4;34m\]"        # Blue
	UPurple="\[\033[4;35m\]"      # Purple
	UCyan="\[\033[4;36m\]"        # Cyan
	UWhite="\[\033[4;37m\]"       # White

# Background
	On_Black="\[\033[40m\]"       # Black
	On_Red="\[\033[41m\]"         # Red
	On_Green="\[\033[42m\]"       # Green
	On_Yellow="\[\033[43m\]"      # Yellow
	On_Blue="\[\033[44m\]"        # Blue
	On_Purple="\[\033[45m\]"      # Purple
	On_Cyan="\[\033[46m\]"        # Cyan
	On_White="\[\033[47m\]"       # White

# High Intensty
	IBlack="\[\033[0;90m\]"       # Black
	IRed="\[\033[0;91m\]"         # Red
	IGreen="\[\033[0;92m\]"       # Green
	IYellow="\[\033[0;93m\]"      # Yellow
	IBlue="\[\033[0;94m\]"        # Blue
	IPurple="\[\033[0;95m\]"      # Purple
	ICyan="\[\033[0;96m\]"        # Cyan
	IWhite="\[\033[0;97m\]"       # White

# Bold High Intensty
	BIBlack="\[\033[1;90m\]"      # Black
	BIRed="\[\033[1;91m\]"        # Red
	BIGreen="\[\033[1;92m\]"      # Green
	BIYellow="\[\033[1;93m\]"     # Yellow
	BIBlue="\[\033[1;94m\]"       # Blue
	BIPurple="\[\033[1;95m\]"     # Purple
	BICyan="\[\033[1;96m\]"       # Cyan
	BIWhite="\[\033[1;97m\]"      # White

# High Intensty backgrounds
	On_IBlack="\[\033[0;100m\]"   # Black
	On_IRed="\[\033[0;101m\]"     # Red
	On_IGreen="\[\033[0;102m\]"   # Green
	On_IYellow="\[\033[0;103m\]"  # Yellow
	On_IBlue="\[\033[0;104m\]"    # Blue
	On_IPurple="\[\033[10;95m\]"  # Purple
	On_ICyan="\[\033[0;106m\]"    # Cyan
	On_IWhite="\[\033[0;107m\]"   # White

# Various variables you might want for your PS1 prompt instead
	Time12h="\T"
	Time12a="\@"
	PathShort="\w"
	#PathFull="\W"
	#NewLine="\n"
	#Jobs="\j"

	if [ $SHELL = "/bin/bash" ]; then
		trim() {
			local var=$1
			var="${var#"${var%%[![:space:]]*}"}"   # remove leading whitespace characters
			var="${var%"${var##*[![:space:]]}"}"   # remove trailing whitespace characters
			echo -n "$var"
	}
	# My Prompt (hacked from http://mediadoneright.com/content/ultimate-git-ps1-bash-prompt)
	export PS1='$(git branch &>/dev/null;\
		if [ $? -eq 0 ]; then
			GitStatus=$(git status -s);
			Clean=$(echo "$GitStatus" | wc -c);
			echo "$(if [ "$Clean" == 1 ]; then
			echo "'$IBlack'"$(__git_ps1 " (%s)");
		else \
			Added=$(trim $(echo "$GitStatus" | grep "^A\{1\}\|^M\{1\}\|^R\{1\}" | wc -l));
			Modified=$(trim $(echo "$GitStatus" | grep "^\\sM\|^AM\|^RM\|^MM" | wc -l));
			Deleted=$(trim $(echo "$GitStatus" | grep "^\\sD\|^AD" | wc -l));
			Untracked=$(trim $(echo "$GitStatus" | grep "^??" | wc -l));
			FileChanges="";
			if [ $Added != 0 ]; then
				FileChanges+='$Color_Off'"'$Green'$Added"'$Color_Off'
			fi
			if [ $Modified != 0 ]; then
				FileChanges+='$Color_Off'"'$Yellow'$Modified"'$Color_Off'
			fi
			if [ $Deleted != 0 ]; then
				FileChanges+='$Color_Off'"'$Red'$Deleted"'$Color_Off'
			fi
			if [ $Untracked != 0 ]; then
				FileChanges+='$Color_Off'"'$Cyan'$Untracked"'$Color_Off'
			fi
			FileChanges=$(trim $FileChanges);
			FileChangesLength=$(echo "$FileChanges" | wc -c);
			if [ $FileChangesLength -gt 1 ]; then
				FileChanges=" $FileChanges";
			fi
			echo "'$IBlack'"$(__git_ps1 "(%s$FileChanges'$IBlack')"); \
		fi) '$BYellow$PathShort$Color_Off' '$IBlack'∫'$Color_Off' "; \
		else \
			# @2 - Prompt when not in GIT repo
			echo "'$BYellow$PathShort$Color_Off' '$IBlack'∫'$Color_Off' "; \
		fi)'
	fi

[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
